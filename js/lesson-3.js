// –§—É–Ω–∫—Ü—ñ—è calculateTotalPrice(order) –ø—Ä–∏–π–º–∞—î –æ–¥–∏–Ω –ø–∞—Ä–∞–º–µ—Ç—Ä order - –º–∞—Å–∏–≤ —á–∏—Å–µ–ª. 
// –î–æ–ø–æ–≤–Ω–∏ —Ñ—É–Ω–∫—Ü—ñ—é —Ç–∞–∫, —â–æ–± –≤–æ–Ω–∞ –ø–æ–≤–µ—Ä—Ç–∞–ª–∞ –∑–∞–≥–∞–ª—å–Ω—É —Å—É–º—É –µ–ª–µ–º–µ–Ω—Ç—ñ–≤ –∑ –º–∞—Å–∏–≤—É order.

let summary = 0;
function calculateTotalPrice(order) {
    for (let i = 0; i < order.length; i++) {

        const element = order[i];        
        summary = summary + element;        
        
    }
    return summary;
}

//console.log(calculateTotalPrice([12, 85, 37, 4])); //138
// console.log(calculateTotalPrice([164, 48, 291])); //503
// console.log(calculateTotalPrice([412, 371, 94, 63, 176])); //1116

//?-------------------TASK--------------------------/

// –§—É–Ω–∫—Ü—ñ—è getEvenNumbers(start, end) –º–∞—î –¥–≤–∞ –ø–∞—Ä–∞–º–µ—Ç—Ä–∏ start —Ç–∞ end, —è–∫—ñ —î —Ü—ñ–ª–∏–º–∏ —á–∏—Å–ª–∞–º–∏.
// –î–æ–ø–æ–≤–Ω–∏ –∫–æ–¥ —Ñ—É–Ω–∫—Ü—ñ—ó —Ç–∞–∫, —â–æ–± –≤–æ–Ω–∞ –ø–æ–≤–µ—Ä—Ç–∞–ª–∞ –º–∞—Å–∏–≤ —É—Å—ñ—Ö –ø–∞—Ä–Ω–∏—Ö —á–∏—Å–µ–ª –≤—ñ–¥ start –¥–æ end.
// –Ø–∫—â–æ –∂–æ–¥–Ω–æ–≥–æ –ø–∞—Ä–Ω–æ–≥–æ —á–∏—Å–ª–∞ –Ω–µ–º–∞—î, —Ç–æ –º–∞—Å–∏–≤ –º–∞—î –±—É—Ç–∏ –ø—É—Å—Ç–∏–º.
// –ü–∞—Ä–Ω–∏–º –≤–≤–∞–∂–∞—î—Ç—å—Å—è —á–∏—Å–ª–æ, —è–∫–µ –¥—ñ–ª–∏—Ç—å—Å—è –Ω–∞ 2 –±–µ–∑ –æ—Å—Ç–∞—á—ñ(10 % 2 === 0).
// –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–π —Ü–∏–∫–ª for.



function getEvenNumbers(start, end) {
    let newArray = [];
    for (let i = start; i <= end; i++) {
        if (i % 2 === 0) {
            newArray.push(i);
    }
        
    }
    return newArray;
}

// console.log(getEvenNumbers(2, 5)); //–ø–æ–≤–µ—Ä—Ç–∞—î [2, 4]
// getEvenNumbers(3, 11) //–ø–æ–≤–µ—Ä—Ç–∞—î [4, 6, 8, 10]
// getEvenNumbers(6, 12) //–ø–æ–≤–µ—Ä—Ç–∞—î [6, 8, 10, 12]
// getEvenNumbers(8, 8) //–ø–æ–≤–µ—Ä—Ç–∞—î [8]
// getEvenNumbers(7, 7) //–ø–æ–≤–µ—Ä—Ç–∞—î []

//?-------------------TASK--------------------------/

// –§—É–Ω–∫—Ü—ñ—è checkStorage(storage, item) –ø—Ä–∏–π–º–∞—î –¥–≤–∞ –ø–∞—Ä–∞–º–µ—Ç—Ä–∏:

// storage - –º–∞—Å–∏–≤ —Ä—è–¥–∫—ñ–≤, —â–æ –æ–ø–∏—Å—É—î –¥–æ—Å—Ç—É–ø–Ω—ñ —Ç–æ–≤–∞—Ä–∏ –Ω–∞ —Å–∫–ª–∞–¥—ñ
// item - —Ä—è–¥–æ–∫ –∑ –Ω–∞–∑–≤–æ—é —Ç–æ–≤–∞—Ä–∞, –Ω–∞—è–≤–Ω—ñ—Å—Ç—å —è–∫–æ–≥–æ –ø–æ—Ç—Ä—ñ–±–Ω–æ –ø–µ—Ä–µ–≤—ñ—Ä–∏—Ç–∏
// –î–æ–ø–æ–≤–Ω–∏ –∫–æ–¥ —Ñ—É–Ω–∫—Ü—ñ—ó —Ç–∞–∫–∏–º —á–∏–Ω–æ–º, —â–æ–± –≤–æ–Ω–∞ –ø–µ—Ä–µ–≤—ñ—Ä—è–ª–∞, —á–∏ –ø—Ä–∏—Å—É—Ç–Ω—ñ–π —Ç–∞–∫–∏–π —Ç–æ–≤–∞—Ä –≤ –º–∞—Å–∏–≤—ñ storage —ñ –ø–æ–≤–µ—Ä—Ç–∞–ª–∞:

// —Ä—è–¥–æ–∫ "<item> is available to order!", –¥–µ item - —Ü–µ –Ω–∞–∑–≤–∞ —Ç–æ–≤–∞—Ä–∞, —è–∫—â–æ —Ç–æ–≤–∞—Ä –±—É–ª–æ –∑–Ω–∞–π–¥–µ–Ω–æ
// —Ä—è–¥–æ–∫ "Sorry! We are out of stock!", —è–∫—â–æ —Ç–∞–∫–æ–≥–æ —Ç–æ–≤–∞—Ä–∞ –Ω–µ–º–∞—î –≤ –º–∞—Å–∏–≤—ñ
// –ó—Ä–æ–±–∏ —Ç–∞–∫, —â–æ–± –ø–æ—à—É–∫ –∑–∞ —ñ–º'—è–º —Ç–æ–≤–∞—Ä—É –±—É–≤ –Ω–µ–∑–∞–ª–µ–∂–Ω–∏–π –≤—ñ–¥ —Ä–µ–≥—ñ—Å—Ç—Ä—É,
// —Ç–æ–±—Ç–æ –Ω–∞–ø—Ä–∏–∫–ª–∞–¥ "plum" —ñ "pLuM" –º–∞—é—Ç—å –±—É—Ç–∏ –∑–Ω–∞–π–¥–µ–Ω—ñ —É –º–∞—Å–∏–≤—ñ["apple", "plum", "pear"].

function checkStorage(storage, item) {
       
        if (storage.includes(item.toLowerCase())) {
            return `${item.toLowerCase()} is available to order!`
        }
        else {
            return "Sorry! We are out of stock!"
        }

}

// console.log(checkStorage(["apple", "plum", "pear"], "plum")); //–ø–æ–≤–µ—Ä—Ç–∞—î "plum is available to order!"
// console.log(checkStorage(["apple", "plum", "pear"], "pLuM")); //–ø–æ–≤–µ—Ä—Ç–∞—î "plum is available to order!"
// console.log(checkStorage(["apple", "plum", "pear"], "pear")); //–ø–æ–≤–µ—Ä—Ç–∞—î "pear is available to order!"
// console.log(checkStorage(["apple", "plum", "pear"], "pEAr")); //–ø–æ–≤–µ—Ä—Ç–∞—î "pear is available to order!"
// console.log(checkStorage(["apple", "plum", "pear"], "orange")); //–ø–æ–≤–µ—Ä—Ç–∞—î "Sorry! We are out of stock!"
// console.log(checkStorage(["apple", "plum", "pear"], "carrot")); //–ø–æ–≤–µ—Ä—Ç–∞—î "Sorry! We are out of stock!"

//?-------------------TASK--------------------------/

// –ü–µ—Ä–µ–¥ —Ä–æ–∑–≤'—è–∑–∞–Ω–Ω—è–º —Ü—ñ—î—ó –∑–∞–¥–∞—á—ñ –≤–∞—Ä—Ç–æ –∑–∞–∑–Ω–∞—á–∏—Ç–∏, —â–æ —Ç–∞–∫–µ —Å–ø—ñ–ª—å–Ω—ñ –µ–ª–µ–º–µ–Ω—Ç–∏.
// –°–ø—ñ–ª—å–Ω–∏–º–∏ –µ–ª–µ–º–µ–Ω—Ç–∞–º–∏ –º–∞—Å–∏–≤—ñ–≤ –Ω–∞–∑–∏–≤–∞—é—Ç—å —Ç—ñ –µ–ª–µ–º–µ–Ω—Ç–∏, —è–∫—ñ –ø—Ä–∏—Å—É—Ç–Ω—ñ —É –≤—Å—ñ—Ö –º–∞—Å–∏–≤–∞—Ö.

// –ù–∞–ø—Ä–∏–∫–ª–∞–¥, —É –¥–≤–æ—Ö –º–∞—Å–∏–≤–∞—Ö[1, 3, 5] —ñ[0, 8, 5, 3] —Å–ø—ñ–ª—å–Ω–∏–º–∏ –±—É–¥—É—Ç—å —á–∏—Å–ª–∞ 3 —ñ 5,
// –æ—Å–∫—ñ–ª—å–∫–∏ –≤–æ–Ω–∏ –ø—Ä–∏—Å—É—Ç–Ω—ñ –≤ –æ–±–æ—Ö –≤—Ö—ñ–¥–Ω–∏—Ö –º–∞—Å–∏–≤–∞—Ö.–ê —á–∏—Å–ª–∞ 0, 1 —ñ 8 –ø—Ä–∏—Å—É—Ç–Ω—ñ —Ç—ñ–ª—å–∫–∏ –≤ –æ–¥–Ω–æ–º—É –∑ –º–∞—Å–∏–≤—ñ–≤.

// –§—É–Ω–∫—Ü—ñ—è getCommonElements(array1, array2), –ø—Ä–∏–π–º–∞—î –¥–≤–∞ –º–∞—Å–∏–≤–∏ (array1 —Ç–∞ array2) –¥–æ–≤—ñ–ª—å–Ω–æ—ó –¥–æ–≤–∂–∏–Ω–∏ –≤ —è–∫–æ—Å—Ç—ñ –ø–∞—Ä–∞–º–µ—Ç—Ä—ñ–≤.

// –î–æ–ø–æ–≤–Ω–∏ –∫–æ–¥ —Ñ—É–Ω–∫—Ü—ñ—ó:

// –°—Ç–≤–æ—Ä–∏ –ø–æ—Ä–æ–∂–Ω—ñ–π –º–∞—Å–∏–≤ –¥–ª—è –∑–±–µ—Ä—ñ–≥–∞–Ω–Ω—è –Ω–æ–≤–æ–≥–æ –º–∞—Å–∏–≤—É.
// –í–∏–∫–æ—Ä–∏—Å—Ç–∞–π —Ü–∏–∫–ª for –¥–ª—è —ñ—Ç–µ—Ä–∞—Ü—ñ—ó –∫–æ–∂–Ω–æ–≥–æ –µ–ª–µ–º–µ–Ω—Ç–∞ —É array1.
// –£ —Ç—ñ–ª—ñ —Ü–∏–∫–ª—É –ø–µ—Ä–µ–≤—ñ—Ä, —á–∏ –ø–æ—Ç–æ—á–Ω–∏–π –µ–ª–µ–º–µ–Ω—Ç —ñ—Å–Ω—É—î —É array2 –∑–∞ –¥–æ–ø–æ–º–æ–≥–æ—é –º–µ—Ç–æ–¥—É includes.
// –Ø–∫—â–æ –≤—ñ–Ω —ñ—Å–Ω—É—î, —Ç–æ –¥–æ–¥–∞–π –µ–ª–µ–º–µ–Ω—Ç –¥–æ –Ω–æ–≤–æ–≥–æ –º–∞—Å–∏–≤—É.
// –ü–æ–≤–µ—Ä–Ω–∏ –Ω–∞–ø–æ–≤–Ω–µ–Ω–∏–π –º–∞—Å–∏–≤ —Å–ø—ñ–ª—å–Ω–∏—Ö –µ–ª–µ–º–µ–Ω—Ç—ñ–≤ —è–∫ —Ä–µ–∑—É–ª—å—Ç–∞—Ç —Ä–æ–±–æ—Ç–∏ —Ñ—É–Ω–∫—Ü—ñ—ó.
// –û–≥–æ–ª–æ—à–µ–Ω–∞ —Ñ—É–Ω–∫—Ü—ñ—è getCommonElements(array1, array2)
// –í–∏–∫–ª–∏–∫ getCommonElements([1, 2, 3], [2, 4]) –ø–æ–≤–µ—Ä—Ç–∞—î [2]
// –í–∏–∫–ª–∏–∫ getCommonElements([1, 2, 3], [2, 1, 17, 19]) –ø–æ–≤–µ—Ä—Ç–∞—î [1, 2]
// –í–∏–∫–ª–∏–∫ getCommonElements([24, 12, 27, 3], [12, 8, 3, 36, 27]) –ø–æ–≤–µ—Ä—Ç–∞—î [12, 27, 3]
// –í–∏–∫–ª–∏–∫ getCommonElements([10, 20, 30, 40], [4, 30, 17, 10, 40]) –ø–æ–≤–µ—Ä—Ç–∞—î [10, 30, 40]
// –í–∏–∫–ª–∏–∫ getCommonElements([1, 2, 3], [10, 20, 30]) –ø–æ–≤–µ—Ä—Ç–∞—î []
// –í–∏–∫–ª–∏–∫ —Ñ—É–Ω–∫—Ü—ñ—ó getCommonElements() –∑ –≤–∏–ø–∞–¥–∫–æ–≤–∏–º–∏ –¥–≤–æ–º–∞ –º–∞—Å–∏–≤–∞–º–∏ –ø–æ–≤–µ—Ä—Ç–∞—î –ø—Ä–∞–≤–∏–ª—å–Ω–∏–π –º–∞—Å–∏–≤


//?-------------------TASK--------------------------/

const planets = ["Earth", "Mars", "Venus"];

for (const planet of planets) {
  //console.log(planet);
}

//?-------------------TASK--------------------------/

// –î–æ–ø–æ–≤–Ω–∏ –∫–æ–¥ —Ñ—É–Ω–∫—Ü—ñ—ó calculateTotalPrice(order) —Ç–∞–∫, —â–æ–± –≤–æ–Ω–∞ –ø–æ–≤–µ—Ä—Ç–∞–ª–∞ –∑–∞–≥–∞–ª—å–Ω—É —Å—É–º—É —á–∏—Å–µ–ª –≤ –º–∞—Å–∏–≤—ñ order.
// –í–∏–∫–æ—Ä–∏—Å—Ç–∞–π —Ü–∏–∫–ª for...of –¥–ª—è –ø–µ—Ä–µ–±–æ—Ä—É –º–∞—Å–∏–≤—É.

function calculateTotalPrice(order) {
    let summary = 0;
    for (const number of order) {
        summary = summary + number;
    }      
    return summary;
}

// console.log(calculateTotalPrice([12, 85, 37, 4])); //–ø–æ–≤–µ—Ä—Ç–∞—î 138
// console.log(calculateTotalPrice([164, 48, 291])) //–ø–æ–≤–µ—Ä—Ç–∞—î 503
// console.log(calculateTotalPrice([412, 371, 94, 63, 176])) //–ø–æ–≤–µ—Ä—Ç–∞—î 1116
// console.log(calculateTotalPrice([])) //–ø–æ–≤–µ—Ä—Ç–∞—î 0

//?-------------------TASK--------------------------/

function sum(a, b) {
  console.log(arguments);
  return a + b;
}

//console.log(sum(2, 5));

//?-------------------TASK--------------------------/

// –§—É–Ω–∫—Ü—ñ—è createReversedArray() –º–æ–∂–µ –ø—Ä–∏–π–º–∞—Ç–∏ –¥–æ–≤—ñ–ª—å–Ω—É –∫—ñ–ª—å–∫—ñ—Å—Ç—å –∞—Ä–≥—É–º–µ–Ω—Ç—ñ–≤.
// –î–æ–ø–æ–≤–Ω–∏ –∫–æ–¥ —Ñ—É–Ω–∫—Ü—ñ—ó —Ç–∞–∫, —â–æ–± –≤–æ–Ω–∞ –ø–æ–≤–µ—Ä—Ç–∞–ª–∞ –º–∞—Å–∏–≤ —É—Å—ñ—Ö –∞—Ä–≥—É–º–µ–Ω—Ç—ñ–≤, –∞–ª–µ –≤ –º–∞—Å–∏–≤—ñ –≤–æ–Ω–∏ –ø–æ–≤–∏–Ω–Ω—ñ –π—Ç–∏ —É –∑–≤–æ—Ä–æ—Ç–Ω–æ–º—É –ø–æ—Ä—è–¥–∫—É.
// –¢–æ–±—Ç–æ, –ø—Ä–∏ –≤–∏–∫–ª–∏–∫—É createReversedArray(1, 2, 3), —Ñ—É–Ω–∫—Ü—ñ—è –º–∞—î –ø–æ–≤–µ—Ä–Ω—É—Ç–∏ –º–∞—Å–∏–≤[3, 2, 1].–í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–π —Ü–∏–∫–ª –∞–±–æ –º–µ—Ç–æ–¥ –º–∞—Å–∏–≤—É toReversed(),
// —è–∫–∏–π –∑–∞—Å—Ç–æ—Å–æ–≤—É—î—Ç—å—Å—è –¥–æ –º–∞—Å–∏–≤—É —ñ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–º —Ä–æ–±–æ—Ç–∏ –ø–æ–≤–µ—Ä—Ç–∞—î –Ω–æ–≤–∏–π –º–∞—Å–∏–≤ –∑ –µ–ª–µ–º–µ–Ω—Ç–∞–º–∏ —É –∑–≤–æ—Ä–æ—Ç–Ω—å–æ–º—É –ø–æ—Ä—è–¥–∫—É.


function createReversedArray() {
    const args = Array.from(arguments);
    //console.log("üöÄ ~ createReversedArray ~ args:", args)
    return args.reverse();

}
    


 //console.log(createReversedArray(12, 85, 37, 4)) //–ø–æ–≤–µ—Ä—Ç–∞—î [4, 37, 85, 12]

